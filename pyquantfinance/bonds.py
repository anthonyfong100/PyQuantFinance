import numpy as np
import pandas as pd
from .decorators import accepts


class bond:

    def __init__(self, maturity: int, principal: float,
                 coupon_rate: float, coupons_per_year: int):
        """
        Maturity refers to the duration till the bonds maturity, measured in number of years
        """
        self.maturity = int
        self.principal = principal
        self.coupon_rate = coupon_rate
        self.coupons_per_year = coupons_per_year
        self._cashflows = None

    @accepts(int, float, float, int)
    def _generate_cashflows(self):
        """
        Returns the series of cash flows generated by a bond,
        indexed by the payment/coupon number
        """
        n_coupons = round(self.maturity * self.coupons_per_year)
        coupon_amt = self.principal * self.coupon_rate / self.coupons_per_year
        coupon_times = np.arange(1, n_coupons + 1)
        cash_flows = pd.Series(data=coupon_amt, index=coupon_times)
        cash_flows.iloc[-1] += self.principal  # add principal to last period
        self._cashflows = cash_flows
        return cash_flows
